#
# https://nikitabobko.github.io/AeroSpace/guide#default-config
#

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking
# In your config, you can drop keys you don't care about
# The absent keys will fallback to their default values

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = 'move-mouse monitor-lazy-center'
on-focus-changed = "move-mouse window-lazy-center"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = [{ monitor.main = 35 }, 10]
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# Layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
alt-period = '''exec-and-forget aerospace layout floating || aerospace layout tiling && aerospace trigger-binding --mode main alt-shift-f'''
alt-shift-f = '''exec-and-forget osascript -e '
-- Find focused monitor name
set monitorName to do shell script "aerospace list-monitors --focused --format '%{monitor-name}'"

-- Get focused monitor display info
set jqFilter to ".SPDisplaysDataType[].spdisplays_ndrvs[] | select(._name == \\\"" & monitorName & "\\\") | ._spdisplays_resolution"
set shellCommand to "system_profiler SPDisplaysDataType -json | jq -r \"" & jqFilter & "\""
set displayInfo to do shell script shellCommand
set screenWidth to word 1 of displayInfo
set screenHeight to word 3 of displayInfo

-- Calculate new size/position
set newWidth to screenWidth / 5 * 3
set newHeight to screenHeight / 5 * 3
set newX to (screenWidth - newWidth) / 2
set newY to (screenHeight - newHeight) / 2

-- Resize/Replace the focused application window
tell application "System Events"
  set frontApp to name of first application process whose frontmost is true

  tell process frontApp
    set win to front window
    set position of win to {newX, newY}
    set size of win to {newWidth, newHeight}
  end tell
end tell'
'''

# Focus
alt-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action stop left'
alt-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action stop down'
alt-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action stop up'
alt-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action stop right'
alt-tab = 'exec-and-forget aerospace focus-back-and-forth || aerospace workspace-back-and-forth'

# Move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# Join
alt-ctrl-h = ['join-with left']
alt-ctrl-j = ['join-with down']
alt-ctrl-k = ['join-with up']
alt-ctrl-l = ['join-with right']

# Workspace
alt-1 = 'workspace --auto-back-and-forth 1'
alt-2 = 'workspace --auto-back-and-forth 2'
alt-3 = 'workspace --auto-back-and-forth 3'
alt-4 = 'workspace --auto-back-and-forth 4'
alt-5 = 'workspace --auto-back-and-forth 5'
alt-6 = 'workspace --auto-back-and-forth 6'
alt-7 = 'workspace --auto-back-and-forth 7'
alt-8 = 'workspace --auto-back-and-forth 8'
alt-9 = 'workspace --auto-back-and-forth 9'
alt-n = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around next'
alt-p = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around prev'

# Move workspace
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
alt-shift-8 = ['move-node-to-workspace 8', 'workspace 7']
alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
alt-shift-n = [
  'move-node-to-workspace --wrap-around next',
  'workspace --wrap-around next',
]
alt-shift-p = [
  'move-node-to-workspace --wrap-around prev',
  'workspace --wrap-around prev',
]

# Focus monitor
alt-keypad4 = 'focus-monitor left'
alt-keypad2 = 'focus-monitor down'
alt-keypad8 = 'focus-monitor up'
alt-keypad6 = 'focus-monitor right'
alt-keypadMinus = 'focus-monitor --wrap-around prev'
alt-keypadPlus = 'focus-monitor --wrap-around next'

# Move monitor
alt-shift-keypad4 = ['move-node-to-monitor left', 'focus-monitor left']
alt-shift-keypad2 = ['move-node-to-monitor down', 'focus-monitor down']
alt-shift-keypad8 = ['move-node-to-monitor up', 'focus-monitor up']
alt-shift-keypad6 = ['move-node-to-monitor right', 'focus-monitor right']
alt-shift-keypadMinus = [
  'move-node-to-monitor --wrap-around prev',
  'focus-monitor --wrap-around prev',
]
alt-shift-keypadPlus = [
  'move-node-to-monitor --wrap-around next',
  'focus-monitor --wrap-around next',
]
alt-shift-keypadEnter = 'move-workspace-to-monitor --wrap-around next'

# Window size
alt-f = 'fullscreen'
alt-minus = 'resize smart -50'
alt-equal = 'resize smart +50'
alt-shift-equal = 'balance-sizes'

# Service
alt-shift-semicolon = 'mode service'

# Disable annoying and useless "hide application" shortcut
# https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
cmd-h = []
cmd-alt-h = []

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main']                # reset layout
f = ['layout floating tiling', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']
